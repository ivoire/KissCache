stages:
- test
- analyze
- build
- deploy

###########################
# Templates               #
#                         #
# make sure all jobs use  #
# architecture tags.      #
###########################
.job: &job
  before_script:
  - ./.gitlab-ci/$CI_JOB_STAGE/$CI_JOB_NAME.sh setup
  dependencies: []
  except: [schedules]
  tags:
  - amd64
  script:
  - ./.gitlab-ci/$CI_JOB_STAGE/$CI_JOB_NAME.sh

.dind: &dind
  <<: *job
  tags:
  - amd64-dind
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  services:
  - docker:stable-dind

########
# Test #
########
test-debian-11:
  image: debian:bullseye
  <<: *job
  stage: test
  tags: [amd64]
  before_script:
  - apt-get update -qq
  - apt-get install --no-install-recommends -y python3 python3-celery python3-django python3-requests
  - apt-get install --no-install-recommends -y python3-pytest python3-pylint-celery python3-pytest-cov python3-pytest-django python3-pytest-mock
  coverage: '/^TOTAL.+ (\d+)%$/'
  script:
  - ln -s tests/manage.py manage.py
  - PYTHONPATH=. pytest-3 -v --junitxml=kiss_cache.xml --cov=kiss_cache --cov-report=html --cov-report=term --cov-fail-under=92 tests/
  artifacts:
    paths:
    - htmlcov/
    reports:
      junit:
      - kiss_cache.xml

###########
# Analyze #
###########
.analyze: &analyze
  <<: *job
  image: hub.lavasoftware.org/lava/ci-images/amd64/analyze
  stage: analyze
  except:
    refs:
    - tags

black:
  <<: *analyze

pylint:
  <<: *analyze

# static analysis with bandit
include:
  template: SAST.gitlab-ci.yml
sast:
  tags: [amd64-dind]
  stage: analyze
  variables:
    DOCKER_DRIVER: overlay2
    SAST_DEFAULT_ANALYZERS: "bandit"

#########
# Build #
#########
docker:
  <<: *dind
  stage: build
